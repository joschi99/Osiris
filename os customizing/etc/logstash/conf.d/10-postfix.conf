input {
  file {
    type => "postfix"
    path => "/var/log/maillog"
    start_position => "beginning"
  }
}

filter {
  grok {
    type => "postfix"
    patterns_dir => [ "/etc/logstash/grok-patterns" ]
    pattern => [
      "%{SYSLOGBASE} %{POSTFIXSMTPDCONNECTS}",
      "%{SYSLOGBASE} %{POSTFIXSMTPDACTIONS}",
      "%{SYSLOGBASE} %{POSTFIXSMTPDTIMEOUTS}",
      "%{SYSLOGBASE} %{POSTFIXSMTPDLOGIN}",
      "%{SYSLOGBASE} %{POSTFIXSMTPDCLIENT}",
      "%{SYSLOGBASE} %{POSTFIXSMTPRELAY}",
      "%{SYSLOGBASE} %{POSTFIXSMTPCONNECT}",
      "%{SYSLOGBASE} %{POSTFIXSMTP4XX}",
      "%{SYSLOGBASE} %{POSTFIXSMTP5XX}",
      "%{SYSLOGBASE} %{POSTFIXSMTPREFUSAL}",
      "%{SYSLOGBASE} %{POSTFIXSMTPLOSTCONNECTION}",
      "%{SYSLOGBASE} %{POSTFIXSMTPTIMEOUT}",
      "%{SYSLOGBASE} %{POSTFIXBOUNCE}",
      "%{SYSLOGBASE} %{POSTFIXQMGR}",
      "%{SYSLOGBASE} %{POSTFIXCLEANUP}"
    ]
      named_captures_only => true
    }
  if [relayip]  {
    geoip {
      source => "relayip"
      target => "geoip"
      database => "/etc/logstash/GeoLiteCity.dat"
    }
    mutate {
      convert => [ "[geoip][location]", "float"]
    }
  }
}

output {
  if [type] == "postfix" {
    elasticsearch {
      host => "127.0.0.1"
      port => 9200
      protocol => "http"
      index => "postfix-%{+YYYY.MM.dd}"
      template_overwrite => true
      template => "/etc/logstash/templates/postfix.json"
      template_name => "postfix"
    }
  }
}


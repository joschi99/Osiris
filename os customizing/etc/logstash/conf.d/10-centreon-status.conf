input {
  jdbc {
    jdbc_validate_connection => true
    jdbc_connection_string => "jdbc:mysql://localhost:3306/centreon_storage"
    jdbc_user => "backup"
    jdbc_password => "mFRiQYIuwHhCIk6s753Q"
    jdbc_driver_library => "/etc/logstash/jdbc/mysql-connector-java-5.1.39-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    statement_filepath => "/etc/logstash/sql/centreon-service-status.sql"
    last_run_metadata_path => "/tmp/logstash-centreon-service-status.lastrun"
    record_last_run => true
    use_column_value => true
    tracking_column => "last_check"
    schedule => "* * * * *"
    tags => [ "jdbc", "centreon", "mariadb", "service" ]
    type => "centreon-service-status"
  }
  jdbc {
    jdbc_validate_connection => true
    jdbc_connection_string => "jdbc:mysql://localhost:3306/centreon_storage"
    jdbc_user => "backup"
    jdbc_password => "mFRiQYIuwHhCIk6s753Q"
    jdbc_driver_library => "/etc/logstash/jdbc/mysql-connector-java-5.1.39-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    statement_filepath => "/etc/logstash/sql/centreon-host-status.sql"
    last_run_metadata_path => "/tmp/logstash-centreon-host-status.lastrun"
    record_last_run => true
    use_column_value => true
    tracking_column => "last_check"
    schedule => "* * * * *"
    tags => [ "jdbc", "centreon", "mariadb", "host" ]
    type => "centreon-host-status"
  }
}

filter {
  if [type] == "centreon-service-status" {
    date {
      match => [ "last_check", "UNIX" ]
      timezone => "Europe/Rome"
      target => "@timestamp"
      remove_field => "last_check"
    }
    date {
      match => [ "last_hard_state_change", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_hard_state_change"
    }
    date {
      match => [ "last_notification", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_notification"
    }
    date {
      match => [ "last_state_change", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_state_change"
    }
    date {
      match => [ "last_time_critical", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_critical"
    }
    date {
      match => [ "last_time_ok", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_ok"
    }
    date {
      match => [ "last_time_unknown", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_unknown"
    }
    date {
      match => [ "last_time_warning", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_warning"
    }
    date {
      match => [ "last_update", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_update"
    }
    date {
      match => [ "next_check", "UNIX" ]
      timezone => "Europe/Rome"
      target => "next_check"
    }
    translate {
      field => "[acknowledged]"
      destination => "acknowledged_desc"
      dictionary => [
      "false", "no",
      "true", "yes"
      ]
    }
    translate {
      field => "[acknowledgement_type]"
      destination => "acknowledgement_type_desc"
      dictionary => [
      "1", "no sticky",
      "2", "sticky"
      ]
    }
    translate {
      field => "[state]"
      destination => "state_desc"
      dictionary => [
      "0", "Ok",
      "1", "Warning",
      "2", "Critical",
      "3", "Unknown"
      ]
    }
    translate {
      field => "[last_hard_state]"
      destination => "last_hard_state_desc"
      dictionary => [
      "0", "Ok",
      "1", "Warning",
      "2", "Critical",
      "3", "Unknown"
      ]
    }
    translate {
      field => "[state_type]"
      destination => "state_type_desc"
      dictionary => [
      "1", "Hard",
      "0", "Soft"
      ]
    }
    mutate {
      rename => { "h_name" => "[service][host][name]" }
      rename => { "h_alias" => "[service][host][alias]" }
      rename => { "h_address" => "[service][host][address]" }
      rename => { "h_display_name" => "[service][host][display_name]" }
      rename => { "acknowledged" => "[service][acknowledged]" }
      rename => { "acknowledgement_type" => "[service][acknowledgement_type]" }
      rename => { "active_checks" => "[service][active_checks]" }
      rename => { "check_attempt" => "[service][check_attempt]" }
      rename => { "check_freshness" => "[service][check_freshness]" }
      rename => { "check_interval" => "[service][check_interval]" }
      rename => { "check_period" => "[service][check_period]" }
      rename => { "check_type" => "[service][check_type]" }
      rename => { "checked" => "[service][checked]" }
      rename => { "description" => "[service][description]" }
      rename => { "display_name" => "[service][display_name]" }
      rename => { "execution_time" => "[service][execution_time]" }
      rename => { "last_hard_state" => "[service][last_hard_state]" }
      rename => { "last_hard_state_change" => "[service][last_hard_state_change]" }
      rename => { "last_hard_state_desc" => "[service][last_hard_state_desc]" }
      rename => { "last_notification" => "[service][last_notification]" }
      rename => { "last_state_change" => "[service][last_state_change]" }
      rename => { "last_time_critical" => "[service][last_time_critical]" }
      rename => { "last_time_ok" => "[service][last_time_ok]" }
      rename => { "last_time_unknown" => "[service][last_time_unknown]" }
      rename => { "last_time_warning" => "[service][last_time_warning]" }
      rename => { "last_update" => "[service][last_update]" }
      rename => { "latency" => "[service][latency]" }
      rename => { "max_check_attempts" => "[service][max_check_attempts]" }
      rename => { "next_check" => "[service][next_check]" }
      rename => { "next_notification" => "[service][next_notification]" }
      rename => { "output" => "[service][output]" }
      rename => { "perfdata" => "[service][perfdata]" }
      rename => { "scheduled_downtime_depth" => "[service][scheduled_downtime_depth]" }
      rename => { "state" => "[service][state]" }
      rename => { "state_desc" => "[service][state_desc]" }
      rename => { "state_type" => "[service][state_type]" }
      rename => { "state_type_desc" => "[service][state_type_desc]" }
    }
  }
  if [type] == "centreon-host-status" {
    date {
      match => [ "last_check", "UNIX" ]
      timezone => "Europe/Rome"
      target => "@timestamp"
      remove_field => "last_check"
    }
    date {
      match => [ "last_hard_state_change", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_hard_state_change"
    }
    date {
      match => [ "last_notification", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_notification"
    }
    date {
      match => [ "last_state_change", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_state_change"
    }
    date {
      match => [ "last_time_down", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_down"
    }
    date {
      match => [ "last_time_unreachable", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_unreachable"
    }
    date {
      match => [ "last_time_up", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_time_up"
    }
    date {
      match => [ "last_update", "UNIX" ]
      timezone => "Europe/Rome"
      target => "last_update"
    }
    date {
      match => [ "next_check", "UNIX" ]
      timezone => "Europe/Rome"
      target => "next_check"
    }
    date {
      match => [ "next_host_notification", "UNIX" ]
      timezone => "Europe/Rome"
      target => "next_host_notification"
    }
    date {
      match => [ "instance_start_time", "UNIX" ]
      timezone => "Europe/Rome"
      target => "instance_start_time"
    }
    date {
      match => [ "instance_last_alive", "UNIX" ]
      timezone => "Europe/Rome"
      target => "instance_last_alive"
    }
    date {
      match => [ "instance_last_command_check", "UNIX" ]
      timezone => "Europe/Rome"
      target => "instance_last_command_check"
    }
    translate {
      field => "[acknowledged]"
      destination => "acknowledged_desc"
      dictionary => [
      "false", "no",
      "true", "yes"
      ]
    }
    translate {
      field => "[acknowledgement_type]"
      destination => "acknowledgement_type_desc"
      dictionary => [
      "1", "no sticky",
      "2", "sticky"
      ]
    }
    translate {
      field => "[state]"
      destination => "state_desc"
      dictionary => [
      "0", "Up",
      "1", "Down",
      "2", "Unreachable"
      ]
    }
    translate {
      field => "[last_hard_state]"
      destination => "last_hard_state_desc"
      dictionary => [
      "0", "Up",
      "1", "Down",
      "2", "Unreachable"
      ]
    }
    translate {
      field => "[state_type]"
      destination => "state_type_desc"
      dictionary => [
      "1", "Hard",
      "0", "Soft"
      ]
    }
    mutate {
      rename => { "name" => "[host][name]" }
      rename => { "alias" => "[host][alias]" }
      rename => { "address" => "[host][address]" }
      rename => { "display_name" => "[host][display_name]" }
      rename => { "acknowledged" => "[host][acknowledged]" }
      rename => { "acknowledgement_type" => "[host][acknowledgement_type]" }
      rename => { "active_checks" => "[host][active_checks]" }
      rename => { "check_attempt" => "[host][check_attempt]" }
      rename => { "check_freshness" => "[host][check_freshness]" }
      rename => { "check_interval" => "[host][check_interval]" }
      rename => { "check_period" => "[host][check_period]" }
      rename => { "check_type" => "[host][check_type]" }
      rename => { "checked" => "[host][checked]" }
      rename => { "execution_time" => "[host][execution_time]" }
      rename => { "flapping" => "[host][flapping]" }
      rename => { "last_hard_state" => "[host][last_hard_state]" }
      rename => { "last_hard_state_change" => "[host][last_hard_state_change]" }
      rename => { "last_hard_state_desc" => "[host][last_hard_state_desc]" }
      rename => { "last_notification" => "[host][last_notification]" }
      rename => { "last_state_change" => "[host][last_state_change]" }
      rename => { "last_time_down" => "[host][last_time_down]" }
      rename => { "last_time_unreachable" => "[host][last_time_unreachable]" }
      rename => { "last_time_up" => "[host][last_time_up]" }
      rename => { "last_update" => "[host][last_update]" }
      rename => { "latency" => "[host][latency]" }
      rename => { "max_check_attempts" => "[host][max_check_attempts]" }
      rename => { "next_check" => "[host][next_check]" }
      rename => { "next_host_notification" => "[host][next_notification]" }
      rename => { "output" => "[host][output]" }
      rename => { "percent_state_change" => "[host][percent_state_change]" }
      rename => { "perfdata" => "[host][perfdata]" }
      rename => { "scheduled_downtime_depth" => "[host][scheduled_downtime_depth]" }
      rename => { "state" => "[host][state]" }
      rename => { "state_desc" => "[host][state_desc]" }
      rename => { "state_type" => "[host][state_type]" }
      rename => { "state_type_desc" => "[host][state_type_desc]" }
      rename => { "timezone" => "[host][timezone]" }
      rename => { "instance_name" => "[intance][name]" }
      rename => { "instance_engine" => "[intance][engine]" }
      rename => { "instance_pid" => "[intance][pid]" }
      rename => { "instance_start_time" => "[intance][start_time]" }
      rename => { "instance_version" => "[intance][version]" }
      rename => { "instance_running" => "[intance][running]" }
      rename => { "instance_last_alive" => "[intance][last_alive]" }
      rename => { "instance_last_command_check" => "[intance][last_command_check]" }
    }
  }
}

output {
  if [type] == "centreon-service-status" or [type] == "centreon-host-status" {
    elasticsearch {
      hosts => [ "127.0.0.1:9200" ]
      index => "centreon-status-%{+YYYY.MM.dd}"
      template_overwrite => true
      template => "/etc/logstash/templates/centreon-status.json"
      template_name => "centreon-status"
    }
  }
}

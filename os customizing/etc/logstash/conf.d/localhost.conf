input {
  file {
    type => "apache-access-json"
    path => "/var/log/httpd/*.ls_json"
    start_position => "beginning"
    codec => "json"
  }
  file {
    type => "osiris2-monitoring"
    path => "/var/log/centreon-engine/centengine.log"
    start_position => "beginning"
  }
}

filter {
  geoip {
    add_tag => [ "GeoIP" ]
    database => "/opt/logstash/GeoLiteCity.dat"
    source => "clientip"
  }
  if [useragent] != "-" and [useragent] != "" {
      useragent {
        add_tag => [ "UA" ]
        source => "useragent"
      }
    }
  if [bytes] == 0 { mutate { remove_field => "[bytes]" } }
  if [geoip][city_name]      == "" { mutate { remove_field => "[geoip][city_name]" } }
  if [geoip][continent_code] == "" { mutate { remove_field => "[geoip][continent_code]" } }
  if [geoip][country_code2]  == "" { mutate { remove_field => "[geoip][country_code2]" } }
  if [geoip][country_code3]  == "" { mutate { remove_field => "[geoip][country_code3]" } }
  if [geoip][country_name]   == "" { mutate { remove_field => "[geoip][country_name]" } }
  if [geoip][latitude]       == "" { mutate { remove_field => "[geoip][latitude]" } }
  if [geoip][longitude]      == "" { mutate { remove_field => "[geoip][longitude]" } }
  if [geoip][postal_code]    == "" { mutate { remove_field => "[geoip][postal_code]" } }
  if [geoip][region_name]    == "" { mutate { remove_field => "[geoip][region_name]" } }
  if [geoip][time_zone]      == "" { mutate { remove_field => "[geoip][time_zone]" } }
  if [urlquery]              == "" { mutate { remove_field => "urlquery" } }
  if "UA" in [tags] {
    if [device] == "Other" { mutate { remove_field => "device" } }
    if [name]   == "Other" { mutate { remove_field => "name" } }
    if [os]     == "Other" { mutate { remove_field => "os" } }
  }
  if "apache-access-json" in [type] {
    if [method]    =~ "(HEAD|OPTIONS)" { mutate { remove_field => "method" } }
    if [useragent] == "-"              { mutate { remove_field => "useragent" } }
    if [referer]   == "-"              { mutate { remove_field => "referer" } }
  }
  grok {
    type => "osiris2-monitoring"
    pattern => "%{NAGIOSLOGLINE}"
  }
  mutate {
    type => "osiris2-monitoring"
    rename => [ "nagios_attempt", "centengine_attempt" ]
    rename => [ "nagios_contact", "centengine_contact" ]
    rename => [ "nagios_epoch", "centengine_epoch" ]
    rename => [ "nagios_hostname", "centengine_hostname" ]
    rename => [ "nagios_message", "centengine_message" ]
    rename => [ "nagios_notifyname", "centengine_notifyname" ]
    rename => [ "nagios_service", "centengine_service" ]
    rename => [ "nagios_state", "centengine_state" ]
    rename => [ "nagios_statelevel", "centengine_statelevel" ]
    rename => [ "nagios_type", "centengine_type" ]
  }
  date {
    type => "osiris2-monitoring"
    # Try to pull the timestamp from the 'timestamp' field (parsed above with
    # grok). The time format looks like: "Wed, 15 May 2013 22:16:16 GMT"
    match => ["centengine_epoch", "UNIX" ]
    add_field => [ "timestamp", "%{centengine_epoch}" ]
  }
}

output {
  elasticsearch_http {
    host => "localhost"
  }
}    